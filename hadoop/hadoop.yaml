
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-hadoop-conf
data:
  HDFS_MASTER_SERVICE: hdfs-master
  HDOOP_YARN_MASTER: yarn-master

# hdfs-master
---
apiVersion: v1
kind: Service
metadata:
  name: hdfs-master
  labels:
    app: hdfs-master
spec:
  type: NodePort
  selector:
    app: hdfs-master
  ports:
  - name: rpc
    port: 9000
    targetPort: 9000
  - name: http
    port: 50070
    targetPort: 50070
    nodePort: 32007
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hdfs-master
  labels:
    app: hdfs-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hdfs-master
  template:
    metadata:
      labels:
        app: hdfs-master
    spec:
      containers:
      - name: hdfs-master
        image: kubeguide/hadoop
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        - containerPort: 50070
        env:
        - name: HADOOP_NODE_TYPE
          value: namenode
        - name: HDFS_MASTER_SERVICE
          valueFrom:
            configMapKeyRef:
              name: kube-hadoop-conf
              key: HDFS_MASTER_SERVICE
        - name: HDOOP_YARN_MASTER
          valueFrom:
            configMapKeyRef:
              name: kube-hadoop-conf
              key: HDOOP_YARN_MASTER
      restartPolicy: Always

# data-node
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: hadoop-datanode
  labels:
    app: hadoop-datanode
spec:
  selector:
    matchLabels:
      name: hadoop-datanode
  template:
    metadata:
      labels:
        name: hadoop-datanode
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: hadoop-datanode
        image: kubeguide/hadoop
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        - containerPort: 50070
        env:
        - name: HADOOP_NODE_TYPE
          value: datanode
        - name: HDFS_MASTER_SERVICE
          valueFrom:
            configMapKeyRef:
              name: kube-hadoop-conf
              key: HDFS_MASTER_SERVICE
        - name: HDOOP_YARN_MASTER
          valueFrom:
            configMapKeyRef:
              name: kube-hadoop-conf
              key: HDOOP_YARN_MASTER
      restartPolicy: Always

# yarn-master
---
apiVersion: v1
kind: Service
metadata:
  name: yarn-master
spec:
  type: NodePort
  selector:
    app: yarn-master
  ports:
  - name: "8030"
    port: 8030
  - name: "8031"
    port: 8031
  - name: "8032"
    port: 8032
  - name: http
    port: 8088
    targetPort: 8088
    nodePort: 32088
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarn-master
  labels:
    app: yarn-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yarn-master
  template:
    metadata:
      labels:
        app: yarn-master
    spec:
      containers:
      - name: yarn-master
        image: kubeguide/hadoop
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        - containerPort: 50070
        env:
        - name: HADOOP_NODE_TYPE
          value: resourceman
        - name: HDFS_MASTER_SERVICE
          valueFrom:
            configMapKeyRef:
              name: kube-hadoop-conf
              key: HDFS_MASTER_SERVICE
        - name: HDOOP_YARN_MASTER
          valueFrom:
            configMapKeyRef:
              name: kube-hadoop-conf
              key: HDOOP_YARN_MASTER
      restartPolicy: Always
---

# yarn-node service
---
apiVersion: v1
kind: Service
metadata:
  name: yarn-node
spec:
  clusterIP: None
  selector:
    app: yarn-node
  ports:
  - port: 8040
---

# yarn-node StatefulSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: yarn-node
spec:
  serviceName: "yarn-node"
  replicas: 3
  selector:
    matchLabels:
      app: yarn-node
  template:
    metadata:
      labels:
        app: yarn-node
    spec:
      containers:
      - name: yarn-node
        image: kubeguide/hadoop
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8040
        - containerPort: 8041
        - containerPort: 8042
        env:
        - name: HADOOP_NODE_TYPE
          value: yarnnode
        - name: HDFS_MASTER_SERVICE
          valueFrom:
            configMapKeyRef:
              name: kube-hadoop-conf
              key: HDFS_MASTER_SERVICE
        - name: HDOOP_YARN_MASTER
          valueFrom:
            configMapKeyRef:
              name: kube-hadoop-conf
              key: HDOOP_YARN_MASTER
      restartPolicy: Always